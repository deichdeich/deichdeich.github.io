This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=latex 2014.8.6)  25 AUG 2016 10:54
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**\makeatletter\def\HCode{\futurelet\HCode\HChar}\def\HChar{\ifx"\HCode\def\HCo
de"##1"{\Link##1}\expandafter\HCode\else\expandafter\Link\fi}\def\Link#1.a.b.c.
{\g@addto@macro\@documentclasshook{\RequirePackage[#1,html]{tex4ht}}\let\HCode\
documentstyle\def\documentstyle{\let\documentstyle\HCode\expandafter\def\csname
 tex4ht\endcsname{#1,html}\def\HCode####1{\documentstyle[tex4ht,}\@ifnextchar[{
\HCode}{\documentstyle[tex4ht]}}}\makeatother\HCode xhtml.a.b.c.\input  2001_so
lutions.tex
(./2001_solutions.tex (/usr/local/texlive/2014/texmf-dist/tex/latex/paper/paper
.cls
Document Class: paper 2008/05/30 1.0l LaTeX document class (wm).
\hours=\count79
\minutes=\count80
(/usr/local/texlive/2014/texmf-dist/tex/latex/base/size11.clo
File: size11.clo 2007/10/19 v1.4h Standard LaTeX file (size option)
)
\beforetitlespace=\skip41
\c@part=\count81
\c@section=\count82
\c@subsection=\count83
\c@subsubsection=\count84
\c@paragraph=\count85
\c@subparagraph=\count86
\exampleindent=\skip42
\c@figure=\count87
\c@table=\count88
\abovecaptionskip=\skip43
\belowcaptionskip=\skip44
\bibindent=\dimen102
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/tex4ht.sty
version 2008-10-27-17:23
Package: tex4ht 
--------------------------------------
--- Note --- for _ at preamble, use the command line option `early_'
--------------------------------------
--------------------------------------
--- Note --- for ^ at preamble, use the command line option `early^'
--------------------------------------
\tmp:toks=\toks14
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/usepackage.4ht
version 2009-05-21-09:32
) (/usr/local/texlive/2014/texmf-dist/tex/latex/geometry/geometry.sty
Package: geometry 2010/09/12 v5.6 Page Geometry
(/usr/local/texlive/2014/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/05/08 v1.15 key=value parser (DPC)
\KV@toks@=\toks15
) (/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/ifpdf.sty
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is not detected.
) (/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/ifvtex.sty
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
) (/usr/local/texlive/2014/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
\Gm@cnth=\count89
\Gm@cntv=\count90
\c@Gm@tempcnt=\count91
\Gm@bindingoffset=\dimen103
\Gm@wd@mp=\dimen104
\Gm@odd@mp=\dimen105
\Gm@even@mp=\dimen106
\Gm@layoutwidth=\dimen107
\Gm@layoutheight=\dimen108
\Gm@layouthoffset=\dimen109
\Gm@layoutvoffset=\dimen110
\Gm@dimlist=\toks16
) (/usr/local/texlive/2014/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2014/04/25 v1.0g Enhanced LaTeX Graphics (DPC,SPQR)
(/usr/local/texlive/2014/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2009/02/05 v1.0o Standard LaTeX Graphics (DPC,SPQR)
(/usr/local/texlive/2014/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 1999/03/16 v1.09 sin cos tan (DPC)
) (/usr/local/texlive/2014/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: dvips.def on input line 91.
(/usr/local/texlive/2014/texmf-dist/tex/latex/graphics/dvips.def
File: dvips.def 2014/04/23 v3.0j Driver-dependant file (DPC,SPQR)
))
\Gin@req@height=\dimen111
\Gin@req@width=\dimen112
) (/usr/local/texlive/2014/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols
(/usr/local/texlive/2014/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\@emptytoks=\toks17
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
)) (/usr/local/texlive/2014/texmf-dist/tex/latex/oberdiek/epstopdf.sty
Package: epstopdf 2010/02/09 v2.5 Conversion with epstopdf on the fly (HO)
(/usr/local/texlive/2014/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf
(/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
) (/usr/local/texlive/2014/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)
(/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/kvdefinekeys.sty
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
(/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
))) (/usr/local/texlive/2014/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
(/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/kvsetkeys.sty
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
(/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/etexcmds.sty
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
(/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/ifluatex.sty
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
))) (/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/pdftexcmds.sty
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode is ignored in DVI mode.
)

Package epstopdf Warning: Drivers other than `pdftex.def' are not supported.

)) (/usr/local/texlive/2014/texmf-dist/tex/latex/physics/physics.sty
Package: physics 
(/usr/local/texlive/2014/texmf-dist/tex/latex/l3packages/xparse/xparse.sty (/us
r/local/texlive/2014/texmf-dist/tex/latex/l3kernel/expl3.sty
Package: expl3 2014/05/20 v4814 L3 programming layer (loader) 
(/usr/local/texlive/2014/texmf-dist/tex/latex/l3kernel/expl3-code.tex
Package: expl3 2014/05/20 v4814 L3 programming layer (code) 
L3 Module: l3bootstrap 2014/05/16 v4782 L3 Bootstrap code
(/usr/local/texlive/2014/texmf-dist/tex/latex/etex-pkg/etex.sty
Package: etex 1998/03/26 v2.0 eTeX basic definition package (PEB)
\et@xins=\count92
)
L3 Module: l3names 2014/05/04 v4728 L3 Namespace for primitives
L3 Module: l3basics 2014/05/04 v4728 L3 Basic definitions
L3 Module: l3expan 2014/04/30 v4712 L3 Argument expansion
L3 Module: l3tl 2014/05/04 v4728 L3 Token lists
L3 Module: l3seq 2014/04/30 v4712 L3 Sequences and stacks
L3 Module: l3int 2014/05/16 v4776 L3 Integers
\c_max_int=\count93
\l_tmpa_int=\count94
\l_tmpb_int=\count95
\g_tmpa_int=\count96
\g_tmpb_int=\count97
L3 Module: l3quark 2014/05/04 v4728 L3 Quarks
L3 Module: l3prg 2014/05/04 v4728 L3 Control structures
\g__prg_map_int=\count98
L3 Module: l3clist 2014/05/04 v4728 L3 Comma separated lists
L3 Module: l3token 2014/05/04 v4728 L3 Experimental token manipulation
L3 Module: l3prop 2014/04/30 v4712 L3 Property lists
L3 Module: l3msg 2014/05/04 v4728 L3 Messages
L3 Module: l3file 2014/05/05 v4737 L3 File and I/O operations
\l_iow_line_count_int=\count99
\l__iow_target_count_int=\count100
\l__iow_current_line_int=\count101
\l__iow_current_word_int=\count102
\l__iow_current_indentation_int=\count103
L3 Module: l3skip 2014/05/05 v4738 L3 Dimensions and skips
\c_zero_dim=\dimen113
\c_max_dim=\dimen114
\l_tmpa_dim=\dimen115
\l_tmpb_dim=\dimen116
\g_tmpa_dim=\dimen117
\g_tmpb_dim=\dimen118
\c_zero_skip=\skip45
\c_max_skip=\skip46
\l_tmpa_skip=\skip47
\l_tmpb_skip=\skip48
\g_tmpa_skip=\skip49
\g_tmpb_skip=\skip50
\c_zero_muskip=\muskip10
\c_max_muskip=\muskip11
\l_tmpa_muskip=\muskip12
\l_tmpb_muskip=\muskip13
\g_tmpa_muskip=\muskip14
\g_tmpb_muskip=\muskip15
L3 Module: l3keys 2014/05/08 v4753 L3 Key-value interfaces
\g__keyval_level_int=\count104
\l_keys_choice_int=\count105
L3 Module: l3fp 2014/04/30 v4712 L3 Floating points
\c__fp_leading_shift_int=\count106
\c__fp_middle_shift_int=\count107
\c__fp_trailing_shift_int=\count108
\c__fp_big_leading_shift_int=\count109
\c__fp_big_middle_shift_int=\count110
\c__fp_big_trailing_shift_int=\count111
\c__fp_Bigg_leading_shift_int=\count112
\c__fp_Bigg_middle_shift_int=\count113
\c__fp_Bigg_trailing_shift_int=\count114
L3 Module: l3box 2014/05/04 v4728 L3 Experimental boxes
\c_empty_box=\box26
\l_tmpa_box=\box27
\l_tmpb_box=\box28
\g_tmpa_box=\box29
\g_tmpb_box=\box30
L3 Module: l3coffins 2014/05/04 v4728 L3 Coffin code layer
\l__coffin_internal_box=\box31
\l__coffin_internal_dim=\dimen119
\l__coffin_offset_x_dim=\dimen120
\l__coffin_offset_y_dim=\dimen121
\l__coffin_x_dim=\dimen122
\l__coffin_y_dim=\dimen123
\l__coffin_x_prime_dim=\dimen124
\l__coffin_y_prime_dim=\dimen125
\c_empty_coffin=\box32
\l__coffin_aligned_coffin=\box33
\l__coffin_aligned_internal_coffin=\box34
\l_tmpa_coffin=\box35
\l_tmpb_coffin=\box36
\l__coffin_display_coffin=\box37
\l__coffin_display_coord_coffin=\box38
\l__coffin_display_pole_coffin=\box39
\l__coffin_display_offset_dim=\dimen126
\l__coffin_display_x_dim=\dimen127
\l__coffin_display_y_dim=\dimen128
L3 Module: l3color 2014/04/30 v4712 L3 Experimental color support
L3 Module: l3luatex 2014/04/30 v4712 L3 Experimental LuaTeX-specific functions
\g__cctab_allocate_int=\count115
\g__cctab_stack_int=\count116
L3 Module: l3candidates 2014/05/04 v4734 L3 Experimental additions to l3kernel
\l__box_top_dim=\dimen129
\l__box_bottom_dim=\dimen130
\l__box_left_dim=\dimen131
\l__box_right_dim=\dimen132
\l__box_top_new_dim=\dimen133
\l__box_bottom_new_dim=\dimen134
\l__box_left_new_dim=\dimen135
\l__box_right_new_dim=\dimen136
\l__box_internal_box=\box40
\l__coffin_bounding_shift_dim=\dimen137
\l__coffin_left_corner_dim=\dimen138
\l__coffin_right_corner_dim=\dimen139
\l__coffin_bottom_corner_dim=\dimen140
\l__coffin_top_corner_dim=\dimen141
\l__coffin_scaled_total_height_dim=\dimen142
\l__coffin_scaled_width_dim=\dimen143
))
Package: xparse 2014/05/05 v4740 L3 Experimental document command parser
\l__xparse_current_arg_int=\count117
\l__xparse_m_args_int=\count118
\l__xparse_mandatory_args_int=\count119
\l__xparse_processor_int=\count120
\l__xparse_v_nesting_int=\count121
) (/usr/local/texlive/texmf-local/tex/latex/amsmath/amsmath.sty
Package: amsmath 2013/01/14 v2.14 AMS math features
\@mathmargin=\skip51
For additional information on amsmath, use the `?' option.
(/usr/local/texlive/texmf-local/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01
(/usr/local/texlive/texmf-local/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0
\@emptytoks=\toks18
\ex@=\dimen144
)) (/usr/local/texlive/texmf-local/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d
\pmbraise@=\dimen145
) (/usr/local/texlive/texmf-local/tex/latex/amsmath/amsopn.sty
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count122
LaTeX Info: Redefining \frac on input line 210.
\uproot@=\count123
\leftroot@=\count124
LaTeX Info: Redefining \overline on input line 306.
\classnum@=\count125
\DOTSCASE@=\count126
LaTeX Info: Redefining \ldots on input line 378.
LaTeX Info: Redefining \dots on input line 381.
LaTeX Info: Redefining \cdots on input line 466.
\Mathstrutbox@=\box41
\strutbox@=\box42
\big@size=\dimen146
LaTeX Font Info:    Redeclaring font encoding OML on input line 566.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 567.
\macc@depth=\count127
\c@MaxMatrixCols=\count128
\dotsspace@=\muskip16
\c@parentequation=\count129
\dspbrk@lvl=\count130
\tag@help=\toks19
\row@=\count131
\column@=\count132
\maxfields@=\count133
\andhelp@=\toks20
\eqnshift@=\dimen147
\alignsep@=\dimen148
\tagshift@=\dimen149
\tagwidth@=\dimen150
\totwidth@=\dimen151
\lineht@=\dimen152
\@envbody=\toks21
\multlinegap=\skip52
\multlinetaggap=\skip53
\mathdisplay@stack=\toks22
LaTeX Info: Redefining \[ on input line 2665.
LaTeX Info: Redefining \] on input line 2666.
)
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vnabla with arg. spec. '' on line 25.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \varE with arg. spec. '' on line 29.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \ordersymbol with arg. spec. '' on line 30.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \lparen with arg. spec. '' on line 31.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \rparen with arg. spec. '' on line 32.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \quantity with arg. spec. '' on line 35.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \@quantity with arg. spec. ' t\big t\Big t\bigg
. t\Bigg g o d() d|| ' on line 62.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qty with arg. spec. '' on line 63.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \pqty with arg. spec. ' l m ' on line 64.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \bqty with arg. spec. ' l m ' on line 65.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \Bqty with arg. spec. ' l m ' on line 66.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vqty with arg. spec. ' l m ' on line 67.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \pmqty with arg. spec. 'm' on line 70.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \Pmqty with arg. spec. 'm' on line 71.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \bmqty with arg. spec. 'm' on line 72.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vmqty with arg. spec. 'm' on line 73.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \matrixquantity with arg. spec. '' on line 74.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \@matrixquantity with arg. spec. ' s g o d() d|| '
. on line 100.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \mqty with arg. spec. '' on line 101.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \matrixdeterminant with arg. spec. 'm' on line
. 102.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \mdet with arg. spec. '' on line 103.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \spmqty with arg. spec. 'm' on line 105.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \sPmqty with arg. spec. 'm' on line 106.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \sbmqty with arg. spec. 'm' on line 107.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \svmqty with arg. spec. 'm' on line 108.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \smallmatrixquantity with arg. spec. ' s g o d()
. d|| ' on line 133.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \smqty with arg. spec. '' on line 134.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \smallmatrixdeterminant with arg. spec. 'm' on
. line 135.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \smdet with arg. spec. '' on line 136.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \argopen with arg. spec. 's' on line 138.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \argclose with arg. spec. 's' on line 139.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \braces with arg. spec. '' on line 141.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \@braces with arg. spec. ' s t\big t\Big t\bigg
. t\Bigg m m m ' on line 156.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \fbraces with arg. spec. ' s t\big t\Big t\bigg
. t\Bigg m m m m ' on line 174.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \absolutevalue with arg. spec. ' l m ' on line
. 176.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \abs with arg. spec. '' on line 177.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \norm with arg. spec. ' l m ' on line 178.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \order with arg. spec. ' l m ' on line 179.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \evaluated with arg. spec. ' s g d[| d(| ' on line
. 194.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \eval with arg. spec. '' on line 195.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \poissonbracket with arg. spec. ' l m m ' on line
. 197.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \pb with arg. spec. '' on line 198.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \commutator with arg. spec. ' l m m ' on line 201.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \comm with arg. spec. '' on line 202.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \anticommutator with arg. spec. ' l m m ' on line
. 203.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \acommutator with arg. spec. '' on line 204.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \acomm with arg. spec. '' on line 205.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vectorbold with arg. spec. ' s m ' on line 208.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vb with arg. spec. '' on line 209.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vectorarrow with arg. spec. ' s m ' on line 211.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \va with arg. spec. '' on line 212.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vectorunit with arg. spec. ' s m ' on line 214.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vu with arg. spec. '' on line 215.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \dotproduct with arg. spec. '' on line 217.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vdot with arg. spec. '' on line 218.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \crossproduct with arg. spec. '' on line 220.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \cross with arg. spec. '' on line 221.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \cp with arg. spec. '' on line 222.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \gradient with arg. spec. ' g o d() ' on line 232.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \grad with arg. spec. '' on line 233.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \divergence with arg. spec. ' g o d() ' on line
. 243.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \div with arg. spec. '' on line 246.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \curl with arg. spec. ' g o d() ' on line 256.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \laplacian with arg. spec. ' g o d() ' on line
. 266.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \principalvalue with arg. spec. 'g' on line 274.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \pv with arg. spec. '' on line 275.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \PV with arg. spec. 'g' on line 276.
.................................................
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \Re with arg. spec. 'g' on line 277.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \Im with arg. spec. 'g' on line 278.
*************************************************
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \opbraces with arg. spec. ' m g o d() ' on line
. 299.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \trigbraces with arg. spec. ' m o d() ' on line
. 305.
.................................................
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \sin with arg. spec. '' on line 309.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \cos with arg. spec. '' on line 310.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \tan with arg. spec. '' on line 311.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \csc with arg. spec. '' on line 312.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \sec with arg. spec. '' on line 313.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \cot with arg. spec. '' on line 314.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \arcsin with arg. spec. '' on line 316.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \arccos with arg. spec. '' on line 317.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \arctan with arg. spec. '' on line 318.
*************************************************
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \arccsc with arg. spec. '' on line 320.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \arcsec with arg. spec. '' on line 322.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \arccot with arg. spec. '' on line 324.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \asin with arg. spec. '' on line 327.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \acos with arg. spec. '' on line 329.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \atan with arg. spec. '' on line 331.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \acsc with arg. spec. '' on line 333.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \asec with arg. spec. '' on line 335.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \acot with arg. spec. '' on line 337.
.................................................
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \sinh with arg. spec. '' on line 339.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \cosh with arg. spec. '' on line 340.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \tanh with arg. spec. '' on line 341.
*************************************************
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \csch with arg. spec. '' on line 343.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \sech with arg. spec. '' on line 345.
.................................................
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \coth with arg. spec. '' on line 346.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \exp with arg. spec. '' on line 348.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \log with arg. spec. '' on line 349.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \ln with arg. spec. '' on line 350.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \det with arg. spec. '' on line 351.
*************************************************
*************************************************
* LaTeX warning: "xparse/redefine-command"
* 
* Redefining document command \Pr with arg. spec. '' on line 352.
*************************************************
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \tr with arg. spec. '' on line 353.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \Tr with arg. spec. '' on line 354.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \Res with arg. spec. '' on line 355.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qqtext with arg. spec. ' s m ' on line 377.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qq with arg. spec. '' on line 378.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qcomma with arg. spec. '' on line 380.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qc with arg. spec. '' on line 381.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qif with arg. spec. 's' on line 383.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qthen with arg. spec. 's' on line 384.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qelse with arg. spec. 's' on line 385.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qotherwise with arg. spec. 's' on line 386.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qunless with arg. spec. 's' on line 387.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qgiven with arg. spec. 's' on line 388.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qusing with arg. spec. 's' on line 389.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qassume with arg. spec. 's' on line 390.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qsince with arg. spec. 's' on line 391.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qlet with arg. spec. 's' on line 392.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qfor with arg. spec. 's' on line 393.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qall with arg. spec. 's' on line 394.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qeven with arg. spec. 's' on line 395.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qodd with arg. spec. 's' on line 396.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qinteger with arg. spec. 's' on line 397.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qand with arg. spec. 's' on line 398.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qor with arg. spec. 's' on line 399.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qas with arg. spec. 's' on line 400.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qin with arg. spec. 's' on line 401.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \qcc with arg. spec. 's' on line 402.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \differential with arg. spec. ' o g d() ' on line
. 415.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \dd with arg. spec. '' on line 416.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \derivative with arg. spec. ' s o m g d() ' on
. line 435.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \dv with arg. spec. '' on line 436.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \partialderivative with arg. spec. ' s o m g g d()
. ' on line 460.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \pderivative with arg. spec. '' on line 461.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \pdv with arg. spec. '' on line 462.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \variation with arg. spec. ' o g d() ' on line
. 474.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \var with arg. spec. '' on line 475.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \functionalderivative with arg. spec. ' s o m g
. d() ' on line 494.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \fderivative with arg. spec. '' on line 495.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \fdv with arg. spec. '' on line 496.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \bra with arg. spec. ' s m t\ket s g ' on line
. 526.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \ket with arg. spec. ' s m ' on line 533.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \innerproduct with arg. spec. ' s m g ' on line
. 548.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \braket with arg. spec. '' on line 549.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \ip with arg. spec. '' on line 550.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \outerproduct with arg. spec. ' s m g ' on line
. 565.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \dyad with arg. spec. '' on line 566.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \op with arg. spec. '' on line 567.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \ketbra with arg. spec. '' on line 568.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \expectationvalue with arg. spec. ' s s m g ' on
. line 587.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \expval with arg. spec. '' on line 588.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \ev with arg. spec. '' on line 589.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \vev with arg. spec. ' m ' on line 590.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \matrixelement with arg. spec. ' s s m m m ' on
. line 601.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \matrixel with arg. spec. '' on line 602.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \mel with arg. spec. '' on line 603.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \identitymatrix with arg. spec. 'm' on line 633.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \imat with arg. spec. '' on line 634.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \xmatrix with arg. spec. ' s m m m ' on line 659.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \xmat with arg. spec. '' on line 660.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \zeromatrix with arg. spec. ' m g ' on line 662.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \zmat with arg. spec. '' on line 663.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \paulixmatrix with arg. spec. '' on line 665.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \pauliymatrix with arg. spec. '' on line 666.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \paulizmatrix with arg. spec. '' on line 667.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \paulimatrix with arg. spec. 'm' on line 678.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \pmat with arg. spec. '' on line 679.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \diagonalmatrix with arg. spec. 'O{} >{\SplitList
. {,}}m ' on line 681.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \@dmat with arg. spec. 'mmggggggg' on line 714.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \dmat with arg. spec. '' on line 715.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \antidiagonalmatrix with arg. spec. 'O{}
. >{\SplitList {,}}m ' on line 717.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \@admat with arg. spec. 'mmggggggg' on line 750.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \admat with arg. spec. '' on line 751.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \flatfrac with arg. spec. ' m m ' on line 754.
.................................................
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining document command \homework with arg. spec. '' on line 764.
.................................................
) (/usr/local/texlive/2014/texmf-dist/tex/latex/mh/mathtools.sty
Package: mathtools 2014/05/21 v1.14 mathematical typesetting tools
(/usr/local/texlive/2014/texmf-dist/tex/latex/tools/calc.sty
Package: calc 2007/08/22 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count134
\calc@Bcount=\count135
\calc@Adimen=\dimen153
\calc@Bdimen=\dimen154
\calc@Askip=\skip54
\calc@Bskip=\skip55
LaTeX Info: Redefining \setlength on input line 75.
LaTeX Info: Redefining \addtolength on input line 76.
\calc@Ccount=\count136
\calc@Cskip=\skip56
) (/usr/local/texlive/2014/texmf-dist/tex/latex/mh/mhsetup.sty
Package: mhsetup 2010/01/21 v1.2a programming setup (MH)
)
LaTeX Info: Thecontrolsequence`\['isalreadyrobust on input line 129.
LaTeX Info: Thecontrolsequence`\]'isalreadyrobust on input line 129.
\g_MT_multlinerow_int=\count137
\l_MT_multwidth_dim=\dimen155
\origjot=\skip57
\l_MT_shortvdotswithinadjustabove_dim=\dimen156
\l_MT_shortvdotswithinadjustbelow_dim=\dimen157
\l_MT_above_intertext_sep=\dimen158
\l_MT_below_intertext_sep=\dimen159
\l_MT_above_shortintertext_sep=\dimen160
\l_MT_below_shortintertext_sep=\dimen161
) (/usr/local/texlive/2014/texmf-dist/tex/latex/enumitem/enumitem.sty
Package: enumitem 2011/09/28 v3.5.2 Customized lists
\labelindent=\skip58
\enit@outerparindent=\dimen162
\enit@toks=\toks23
\enit@inbox=\box43
\enitdp@description=\count138
) (/usr/local/texlive/2014/texmf-dist/tex/latex/was/gensymb.sty
Package: gensymb 2003/07/02 v1.0 (WaS)
) (/usr/local/texlive/2014/texmf-dist/tex/latex/graphics/color.sty
Package: color 2014/04/23 v1.1a Standard LaTeX Color (DPC)
(/usr/local/texlive/2014/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: dvips.def on input line 137.
(/usr/local/texlive/2014/texmf-dist/tex/latex/graphics/dvipsnam.def
File: dvipsnam.def 2014/04/23 v3.0j Driver-dependant file (DPC,SPQR)
)) (/usr/local/texlive/2014/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2012/11/06 v6.83m Hypertext links for LaTeX
(/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2012/05/28 v1.13 Bundle oberdiek, subset hyperref (HO)

(/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2012/05/28 v1.13 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/05/28 v1.13 Construct package bundles (HO)
Package hobsub Info: Skipping package `infwarerr' (already loaded).
Package hobsub Info: Skipping package `ltxcmds' (already loaded).
Package hobsub Info: Skipping package `ifluatex' (already loaded).
Package hobsub Info: Skipping package `ifvtex' (already loaded).
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package hobsub Info: Skipping package `ifpdf' (already loaded).
Package hobsub Info: Skipping package `etexcmds' (already loaded).
Package hobsub Info: Skipping package `kvsetkeys' (already loaded).
Package hobsub Info: Skipping package `kvdefinekeys' (already loaded).
Package hobsub Info: Skipping package `pdftexcmds' (already loaded).
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2012/05/28 v1.2 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
) (/usr/local/texlive/2014/texmf-dist/tex/latex/oberdiek/auxhook.sty
Package: auxhook 2011/03/04 v1.3 Hooks for auxiliary files (HO)

Package auxhook Warning: Cannot patch \document,
(auxhook)                using \AtBeginDocument instead.

)
\@linkdim=\dimen163
\Hy@linkcounter=\count139
\Hy@pagecounter=\count140
(/usr/local/texlive/2014/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2012/11/06 v6.83m Hyperref: PDFDocEncoding definition (HO)
)
\Hy@SavedSpaceFactor=\count141
(/usr/local/texlive/2014/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `colorlinks' set `true' on input line 4319.
Package hyperref Info: Hyper figures OFF on input line 4443.
Package hyperref Info: Link nesting OFF on input line 4448.
Package hyperref Info: Hyper index ON on input line 4451.
Package hyperref Info: Plain pages OFF on input line 4458.
Package hyperref Info: Backreferencing OFF on input line 4463.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4688.
\c@Hy@tempcnt=\count142
(/usr/local/texlive/2014/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip17
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 5041.
\XeTeXLinkMargin=\dimen164
\Fld@menulength=\count143
\Field@Width=\dimen165
\Fld@charsize=\dimen166
\Field@toks=\toks24
Package hyperref Info: Hyper figures OFF on input line 6295.
Package hyperref Info: Link nesting OFF on input line 6300.
Package hyperref Info: Hyper index ON on input line 6303.
Package hyperref Info: backreferencing OFF on input line 6310.
Package hyperref Info: Link coloring ON on input line 6313.
Package hyperref Info: Link coloring with OCG OFF on input line 6320.
Package hyperref Info: PDF/A mode OFF on input line 6325.
LaTeX Info: Redefining \ref on input line 6365.
LaTeX Info: Redefining \pageref on input line 6369.
\Hy@abspage=\count144

Package hyperref Message: Stopped early.

)

Package hyperref Message: Driver: htex4ht.

(/usr/local/texlive/2014/texmf-dist/tex/latex/hyperref/htex4ht.def
File: htex4ht.def 2012/11/06 v6.83m Hyperref driver for TeX4ht
Package hyperref Info: tex4ht is already loaded.
)
Package hyperref Info: Option `colorlinks' set `true' on input line 20.
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/tex4ht.4ht
version 2009-01-07-07:11
--------------------------------------
--- Note --- for additional information, use the command line option `info'
--------------------------------------
::::::::::::::::::::::::::::::::::::::::::
 TeX4ht info is available in the log file 
::::::::::::::::::::::::::::::::::::::::::
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/tex4ht.sty
version 2008-10-27-17:23
--- needs --- tex4ht 2001_solutions ---
\tmp:cnt=\count145
\openout15 = `2001_solutions.tmp'.

(./2001_solutions.tmp)
\tmp:dim=\skip59
(./2001_solutions.xref)
\:refout=\write3
\openout3 = `2001_solutions.xref'.

(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht
--------------------------------------
--- Note --- to remove the <?xml version=...?> processing instruction use the c
ommand line option `no-VERSION'
--------------------------------------
--------------------------------------
--- Note --- to remove the DOCTYPE declaration use the command line option `no-
DOCTYPE'
--------------------------------------
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)
--------------------------------------
--- Note --- for marking of the base font, use the command line option `fonts+'

--------------------------------------
--------------------------------------
--- Note --- for non active _, use the command line option `no_'
--------------------------------------
--------------------------------------
--- Note --- for _ of catcode 13, use the command line option `_13'
--------------------------------------
--------------------------------------
--- Note --- for non active ^, use the command line option `no^'
--------------------------------------
--------------------------------------
--- Note --- for ^ of catcode 13, use the command line option `^13'
--------------------------------------
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht
--------------------------------------
--- Note --- for alternative charset, use the command line option `charset=...'

--------------------------------------
--------------------------------------
--- Note --- to ignore CSS font decoration, use the `NoFonts' command line opti
on
--------------------------------------
--------------------------------------
--- Note --- for jpg bitmaps of pictures, use the `jpg' command line option. (C
haracter bitmaps are controled only by `g' records of tex4ht.env and `-g' switc
hes of tex4ht.c) 
--------------------------------------
--------------------------------------
--- Note --- for gif bitmaps of pictures, use the `gif' command line option. (C
haracter bitmaps are controled only by `g' records of tex4ht.env and `-g' switc
hes of tex4ht.c) 
--------------------------------------
--------------------------------------
--- Note --- for content and toc in 2 frames, use the command line option `fram
es'
--------------------------------------
--------------------------------------
--- Note --- for content, toc, and footnotes in 3 frames, use the command line 
option `frames-fn'
--------------------------------------
--------------------------------------
--- Note --- for file extension name xht, use the command line option `xht'
--------------------------------------
TeX4ht package options: xhtml,html
--------------------------------------
--- Note --- to ignore CSS code, use the command line option `-css
--------------------------------------
--------------------------------------
--- Note --- for inline CSS code, use the command line option `css-in'
--------------------------------------
--------------------------------------
--- Note --- for pop ups on mouse over, use the command line option `mouseover'

--------------------------------------
--------------------------------------
--- Note --- for addressing images in a subdirectory, use the command line opti
on `imgdir:.../'
--------------------------------------
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)
\:tokwrite=\toks25
\:tokpage=\toks26
--------------------------------------
--- Note --- for back links to toc, use the command line option `sections+'
--------------------------------------
--------------------------------------
--- Note --- for linear crosslinks of pages, use the command line option `next'

--------------------------------------
\openout15 = `2001_solutions.4ct'.

\:tocout=\write4
\openout4 = `2001_solutions.4tc'.

(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/latex.4ht
version 2009-05-21-09:32
--------------------------------------
--- Note --- for links into captions, instead of float heads, use the command l
ine option `refcaption'
--------------------------------------
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht
--------------------------------------
--- Note --- For mini tocs immediately aftter the header use the command line o
ption `minitoc<'
--------------------------------------
--------------------------------------
--- Note --- for enumerated list elements with valued data, use the command lin
e option `enumerate+'
--------------------------------------
--------------------------------------
--- Note --- for enumerated list elements li's with value attributes, use the c
ommand line option `enumerate-'
--------------------------------------
--------------------------------------
--- Note --- for CSS2 code, use the command line option `css2'
--------------------------------------
--------------------------------------
--- Note --- for pictorial tabular, use the command line option `pic-tabular'
--------------------------------------
--------------------------------------
--- Note --- for bitmap fbox'es, use the command line option `pic-fbox'
--------------------------------------
--------------------------------------
--- Note --- for bitmap framebox'es, use the command line option `pic-framebox'

--------------------------------------
--------------------------------------
--- Note --- for inline footnotes use command line option `fn-in'
--------------------------------------
--------------------------------------
--- Note --- for tracing of latex font commands, use the command line option `f
onts'
--------------------------------------
--------------------------------------
--- Note --- for width specifications of tabular p entries, use the `p-width' c
ommand line option or a configuration similar to \Configure{HColWidth}{\HCode{ 
style="width:\HColWidth"}}
--------------------------------------
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
--------------------------------------
--- Note --- for pictorial eqnarray, use the command line option `pic-eqnarray'

--------------------------------------
--------------------------------------
--- Note --- for pictorial array, use the command line option `pic-array'
--------------------------------------
--------------------------------------
--- Note --- for pictorial $...$ environments, use the command line option `pic
-m' (not recommended!!)
--------------------------------------
--------------------------------------
--- Note --- for pictorial $...$ and $$...$$ environments with latex alt, use t
he command line option `pic-m+' (not safe!!)
--------------------------------------
--------------------------------------
--- Note --- for pictorial array, use the command line option `pic-array'
--------------------------------------
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/fontmath.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/graphicx.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/graphics.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht
--------------------------------------
--- Note --- if included graphics are of degraded quality, try the command line
 options `graphics-num' or `graphics-'. The `num' should provide the density of
 pixels in the bitmaps (e.g., 110). 
--------------------------------------
--------------------------------------
--- Note --- for key dimensions try the option `Gin-dim'; for key dimensions wh
en bounding box is unavailable try `Gin-dim+'; neither is recommended
--------------------------------------
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/dvips.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/amssymb.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/amsfonts.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/amsmath.4ht
version 2009-05-21-09:32
\tmp:muskip=\muskip18
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/amstext.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/amsbsy.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/amsopn.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/mathtools.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/enumitem.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/color.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/dvipsnam.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/latex/graphics/dvipsnam.def) (/usr/loca
l/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/texlive/201
4/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/hyperref.4ht
version 2011-01-30-16:01
(/usr/local/texlive/2014/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2012/10/27 v2.43 Cross-referencing by name of section
(/usr/local/texlive/2014/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count146
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/nameref.4ht
version 2013-06-28-15:01
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
))
LaTeX Info: Redefining \autoref on input line 100.
\Hy@SectionHShift=\skip60
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/pd1enc.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/local/t
exlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/url.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht
--------------------------------------
--- Note --- for URL encoding within href use the command line option `url-enc'

--------------------------------------
) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (/usr/local/texlive/2014/texmf-dist/tex/generic/tex4ht/html4.4ht) (/usr/loca
l/texlive/2014/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2009-05-18-23:01
)) (./2001_solutions.aux)
\openout1 = `2001_solutions.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 54.
LaTeX Font Info:    ... okay on input line 54.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 54.
LaTeX Font Info:    ... okay on input line 54.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 54.
LaTeX Font Info:    ... okay on input line 54.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 54.
LaTeX Font Info:    ... okay on input line 54.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 54.
LaTeX Font Info:    ... okay on input line 54.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 54.
LaTeX Font Info:    ... okay on input line 54.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 54.
LaTeX Font Info:    ... okay on input line 54.
*geometry* driver: auto-detecting
*geometry* detected driver: dvips
*geometry* verbose mode - [ preamble ] result:
* driver: dvips
* paper: letterpaper
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* modes: 
* h-part:(L,W,R)=(92.14519pt, 430.00462pt, 92.14519pt)
* v-part:(T,H,B)=(95.39737pt, 556.47656pt, 143.09605pt)
* \paperwidth=614.295pt
* \paperheight=794.96999pt
* \textwidth=430.00462pt
* \textheight=556.47656pt
* \oddsidemargin=0.0pt
* \evensidemargin=0.0pt
* \topmargin=-13.87262pt
* \headheight=12.0pt
* \headsep=25.0pt
* \topskip=11.0pt
* \footskip=30.0pt
* \marginparwidth=59.0pt
* \marginparsep=10.0pt
* \columnsep=10.0pt
* \skip\footins=10.0pt plus 4.0pt minus 2.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidefalse
* \@mparswitchfalse
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

LaTeX Info: Redefining \celsius on input line 54.
Package gensymb Info: Faking symbols for \degree and \celsius on input line 54.


Package gensymb Warning: Not defining \perthousand.

LaTeX Info: Redefining \ohm on input line 54.
Package gensymb Info: Using \Omega for \ohm on input line 54.

Package gensymb Warning: Not defining \micro.

\AtBeginShipoutBox=\box44
Package hyperref Info: Link coloring ON on input line 54.
LaTeX Info: Redefining \ref on input line 54.
LaTeX Info: Redefining \pageref on input line 54.
LaTeX Info: Redefining \nameref on input line 54.
--- file 2001_solutions.css ---
[1

] [2]
LaTeX Font Info:    Try loading font information for U+msa on input line 55.
(/usr/local/texlive/2014/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 55.
(/usr/local/texlive/2014/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
l.63 --- TeX4ht warning --- \Link{section.82}? ---
[3

] [4] (./2001_solutions.4ct) [5]
l. 84 Writing 2001_solutions.idv[1] (2001_solutions0x.png)
[6]
l. 90 Writing 2001_solutions.idv[2] (2001_solutions1x.png)
l. 90 Writing 2001_solutions.idv[3] (2001_solutions2x.png)
l. 90 Writing 2001_solutions.idv[4] (2001_solutions3x.png)
[7]
l. 97 Writing 2001_solutions.idv[5] (2001_solutions4x.png)
[8]
l. 110 Writing 2001_solutions.idv[6] (2001_solutions5x.png)
l. 118 Writing 2001_solutions.idv[7] (2001_solutions6x.png)
l. 127 Writing 2001_solutions.idv[8] (2001_solutions7x.png)
l. 127 Writing 2001_solutions.idv[9] (2001_solutions8x.png)
l. 127 Writing 2001_solutions.idv[10] (2001_solutions9x.png)
l. 127 Writing 2001_solutions.idv[11] (2001_solutions10x.png)
l. 127 Writing 2001_solutions.idv[12] (2001_solutions11x.png)
l. 127 Writing 2001_solutions.idv[13] (2001_solutions12x.png)
l. 127 Writing 2001_solutions.idv[14] (2001_solutions13x.png)
l. 127 Writing 2001_solutions.idv[15] (2001_solutions14x.png)
l. 127 Writing 2001_solutions.idv[16] (2001_solutions15x.png)
l. 127 Writing 2001_solutions.idv[17] (2001_solutions16x.png)
[9]
l. 128 Writing 2001_solutions.idv[18] (2001_solutions17x.png)
l. 133 Writing 2001_solutions.idv[19] (2001_solutions18x.png)
l. 135 Writing 2001_solutions.idv[20] (2001_solutions19x.png)
[10]
l. 141 Writing 2001_solutions.idv[21] (2001_solutions20x.png)
[11]
l. 149 Writing 2001_solutions.idv[22] (2001_solutions21x.png)
l. 153 Writing 2001_solutions.idv[23] (2001_solutions22x.png)
l. 156 Writing 2001_solutions.idv[24] (2001_solutions23x.png)
l. 158 Writing 2001_solutions.idv[25] (2001_solutions24x.png)
l. 158 Writing 2001_solutions.idv[26] (2001_solutions25x.png)
[12] [13]
l. 187 Writing 2001_solutions.idv[27] (2001_solutions26x.png)
[14]
l. 194 Writing 2001_solutions.idv[28] (2001_solutions27x.png)
l. 199 Writing 2001_solutions.idv[29] (2001_solutions28x.png)
l. 209 Writing 2001_solutions.idv[30] (2001_solutions29x.png)
l. 209 Writing 2001_solutions.idv[31] (2001_solutions30x.png)
l. 209 Writing 2001_solutions.idv[32] (2001_solutions31x.png)
l. 209 Writing 2001_solutions.idv[33] (2001_solutions32x.png)
! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.209 \end{align}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.209 \end{align}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.209 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.209 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.209 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.209 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.209 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.209 \end{align}
                 
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Extra }, or forgotten $.
\c:halign ->\egroup 
                    \d:halign 
l.209 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.209 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   {
l.209 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument> ... {F}},\\ \Rightarrow C_\text {eff} &
                                                  = \frac {18}{9}\mu \text {...
l.209 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 209 Writing 2001_solutions.idv[34] (2001_solutions33x.png)
! Missing $ inserted.
<inserted text> 
                $
l.209 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
\d:frac ->\egroup 
                  \EndPicture 
l.209 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
\n:frac : ...p \b:frac \@@over \c:frac #2\d:frac }
                                                  
l.209 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.209 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.209 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.209 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \cr.
\cr ->\rR:halign \1cr 
                      
l.209 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.209 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.209 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.209 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten $.
\end:m ->$$\egroup 
                   
l.209 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.209 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.209 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Missing } inserted.
<inserted text> 
                }
l.209 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[15]
l. 211 Writing 2001_solutions.idv[35] (2001_solutions34x.png)
l. 213 Writing 2001_solutions.idv[36] (2001_solutions35x.png)
[16]
l. 224 Writing 2001_solutions.idv[37] (2001_solutions36x.png)
l. 234 Writing 2001_solutions.idv[38] (2001_solutions37x.png)
l. 234 Writing 2001_solutions.idv[39] (2001_solutions38x.png)
l. 234 Writing 2001_solutions.idv[40] (2001_solutions39x.png)
l. 234 Writing 2001_solutions.idv[41] (2001_solutions40x.png)
[17]
l. 242 Writing 2001_solutions.idv[42] (2001_solutions41x.png)
l. 242 Writing 2001_solutions.idv[43] (2001_solutions42x.png)
l. 242 Writing 2001_solutions.idv[44] (2001_solutions43x.png)
l. 242 Writing 2001_solutions.idv[45] (2001_solutions44x.png)
[18]
l. 250 Writing 2001_solutions.idv[46] (2001_solutions45x.png)
l. 254 Writing 2001_solutions.idv[47] (2001_solutions46x.png)
l. 254 Writing 2001_solutions.idv[48] (2001_solutions47x.png)
[19]
l. 260 Writing 2001_solutions.idv[49] (2001_solutions48x.png)
l. 266 Writing 2001_solutions.idv[50] (2001_solutions49x.png)
[20]
l. 276 Writing 2001_solutions.idv[51] (2001_solutions50x.png)
[21]
l. 292 Writing 2001_solutions.idv[52] (2001_solutions51x.png)
l. 298 Writing 2001_solutions.idv[53] (2001_solutions52x.png)
[22]
l. 302 Writing 2001_solutions.idv[54] (2001_solutions53x.png)
l. 309 Writing 2001_solutions.idv[55] (2001_solutions54x.png)
l. 309 Writing 2001_solutions.idv[56] (2001_solutions55x.png)
[23] [24]
l. 325 Writing 2001_solutions.idv[57] (2001_solutions56x.png)
l. 331 Writing 2001_solutions.idv[58] (2001_solutions57x.png)
[25]
l. 338 Writing 2001_solutions.idv[59] (2001_solutions58x.png)
[26]
l. 356 Writing 2001_solutions.idv[60] (2001_solutions59x.png)
[27]
l. 361 Writing 2001_solutions.idv[61] (2001_solutions60x.png)
l. 366 Writing 2001_solutions.idv[62] (2001_solutions61x.png)
l. 374 Writing 2001_solutions.idv[63] (2001_solutions62x.png)
l. 374 Writing 2001_solutions.idv[64] (2001_solutions63x.png)
l. 374 Writing 2001_solutions.idv[65] (2001_solutions64x.png)
[28]
l.381 --- TeX4ht warning --- \Link{section.3}? ---
l. 382 Writing 2001_solutions.idv[66] (2001_solutions65x.png)
[29]
l. 392 Writing 2001_solutions.idv[67] (2001_solutions66x.png)
[30]
l. 406 Writing 2001_solutions.idv[68] (2001_solutions67x.png)
l. 412 Writing 2001_solutions.idv[69] (2001_solutions68x.png)
l. 412 Writing 2001_solutions.idv[70] (2001_solutions69x.png)
l. 412 Writing 2001_solutions.idv[71] (2001_solutions70x.png)
l. 412 Writing 2001_solutions.idv[72] (2001_solutions71x.png)
[31]
l. 417 Writing 2001_solutions.idv[73] (2001_solutions72x.png)
[32]
l. 422 Writing 2001_solutions.idv[74] (2001_solutions73x.png)
! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.431 \end{align}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.431 \end{align}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.431 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.431 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.431 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.431 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.431 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.431 \end{align}
                 
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Extra }, or forgotten $.
\c:halign ->\egroup 
                    \d:halign 
l.431 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.431 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   {
l.431 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument>  I_\text {ext.} &
                            = I_{\text {CM}} + m \left (2r\right )^2,\\ &= \...
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 431 Writing 2001_solutions.idv[75] (2001_solutions74x.png)
! Missing $ inserted.
<inserted text> 
                $
l.431 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.431 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \cr.
\cr ->\rR:halign \1cr 
                      
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.431 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.431 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.431 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
<argument> ...t {CM}} + m \left (2r\right )^2,\\ &
                                                  = \frac {1}{2}mr^2 + m \ti...
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 431 Writing 2001_solutions.idv[76] (2001_solutions75x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.431 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \cr.
\cr ->\rR:halign \1cr 
                      
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.431 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.431 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.431 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.431 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.431 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.431 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<argument> ...rac {1}{2}mr^2 + m \times 4 r^2,\\ &
                                                  = \frac {9}{2}mr^2. 
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 431 Writing 2001_solutions.idv[77] (2001_solutions76x.png)
! Missing $ inserted.
<inserted text> 
                $
l.431 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
\d:frac ->\egroup 
                  \EndPicture 
l.431 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
\n:frac : ...p \b:frac \@@over \c:frac #2\d:frac }
                                                  
l.431 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.431 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.431 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.431 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.431 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.431 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.431 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.431 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.431 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.431 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[33]
l. 431 Writing 2001_solutions.idv[78] (2001_solutions77x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.431 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.431 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.431 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.431 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

l. 433 Writing 2001_solutions.idv[79] (2001_solutions78x.png)
! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.438 \end{align}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.438 \end{align}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.438 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.438 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.438 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.438 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.438 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.438 \end{align}
                 
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Extra }, or forgotten $.
\c:halign ->\egroup 
                    \d:halign 
l.438 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.438 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
l.438 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   {
l.438 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument>  I_\text {tot.} &
                            = I_{\text {CM}} + 6 \times \frac {9}{2}mr^2,\\ ...
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.438 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

l. 438 Writing 2001_solutions.idv[80] (2001_solutions79x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.438 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \cr.
\cr ->\rR:halign \0cr 
                      
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.438 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.438 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.438 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
<argument> ...M}} + 6 \times \frac {9}{2}mr^2,\\ &
                                                  = \frac {1}{2}mr^2 + \frac...
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 438 Writing 2001_solutions.idv[81] (2001_solutions80x.png)
l. 438 Writing 2001_solutions.idv[82] (2001_solutions81x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.438 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \cr.
\cr ->\rR:halign \0cr 
                      
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.438 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.438 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.438 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.438 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.438 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.438 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<argument> ... {1}{2}mr^2 + \frac {54}{2}mr^2,\\ &
                                                  = \frac {55}{2}mr^2. 
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 438 Writing 2001_solutions.idv[83] (2001_solutions82x.png)
! Missing $ inserted.
<inserted text> 
                $
l.438 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
\d:frac ->\egroup 
                  \EndPicture 
l.438 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
\n:frac : ...p \b:frac \@@over \c:frac #2\d:frac }
                                                  
l.438 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.438 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.438 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.438 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.438 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.438 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.438 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.438 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.438 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.438 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.438 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.438 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 438 Writing 2001_solutions.idv[84] (2001_solutions83x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.438 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.438 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.438 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.438 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

[34]
l. 443 Writing 2001_solutions.idv[85] (2001_solutions84x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.449 \end{align}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.449 \end{align}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.449 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.449 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.449 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.449 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.449 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.449 \end{align}
                 
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Extra }, or forgotten $.
\c:halign ->\egroup 
                    \d:halign 
l.449 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
l.449 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   {
l.449 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.449 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.449 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.449 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.449 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<argument>  I &= I_\text {CM} + Md^2,\\ d &
                                           \rightarrow \frac {L}{2},\\ I &= ...
l.449 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.449 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

l. 449 Writing 2001_solutions.idv[86] (2001_solutions85x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.449 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.449 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.449 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Undefined control sequence.
\new:row ->\r:halign 
                     \R:halign 
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\new:row ->\r:halign \R:halign 
                               
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\BB:halign ...\new:row \empty }\new:row \D:halign 
                                                  
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.449 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.449 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.449 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
<argument> ...\ d &\rightarrow \frac {L}{2},\\ I &
                                                  = M\frac {L^2}{12} + M\fra...
l.449 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 449 Writing 2001_solutions.idv[87] (2001_solutions86x.png)
l. 449 Writing 2001_solutions.idv[88] (2001_solutions87x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.449 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.449 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.449 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.449 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.449 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.449 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.449 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.449 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[35]
! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.449 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<argument> ...rac {L^2}{12} + M\frac {L^2}{4},\\ &
                                                  = \frac {1}{3}ML^2. 
l.449 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 449 Writing 2001_solutions.idv[89] (2001_solutions88x.png)
! Missing $ inserted.
<inserted text> 
                $
l.449 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
\d:frac ->\egroup 
                  \EndPicture 
l.449 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
\n:frac : ...p \b:frac \@@over \c:frac #2\d:frac }
                                                  
l.449 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.449 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.449 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.449 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.449 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 449 Writing 2001_solutions.idv[90] (2001_solutions89x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.449 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.449 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.449 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.449 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

l. 455 Writing 2001_solutions.idv[91] (2001_solutions90x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 455 Writing 2001_solutions.idv[92] (2001_solutions91x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.455 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.455 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.455 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.455 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.455 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<recently read> &
                 
l.455 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 455 Writing 2001_solutions.idv[93] (2001_solutions92x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.455 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.455 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.455 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.455 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.455 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.455 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.455 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.455 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[36]
! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.455 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<argument> ...row \omega ^2 &= \frac {MgL}{I},\\ &
                                                  = \frac {3g}{L}. 
l.455 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 455 Writing 2001_solutions.idv[94] (2001_solutions93x.png)
! Missing $ inserted.
<inserted text> 
                $
l.455 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
\d:frac ->\egroup 
                  \EndPicture 
l.455 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
\n:frac : ...p \b:frac \@@over \c:frac #2\d:frac }
                                                  
l.455 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.455 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.455 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.455 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.455 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 455 Writing 2001_solutions.idv[95] (2001_solutions94x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.455 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.455 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.455 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.455 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

l. 460 Writing 2001_solutions.idv[96] (2001_solutions95x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 460 Writing 2001_solutions.idv[97] (2001_solutions96x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.460 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.460 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.460 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.460 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.460 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument> ...= \frac {3g}{L},\\ \Rightarrow {v} &
                                                  = \sqrt {3gL}. 
l.460 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 460 Writing 2001_solutions.idv[98] (2001_solutions97x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.460 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.460 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.460 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.460 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.460 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.460 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.460 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.460 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.460 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.460 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.460 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[37]
l. 460 Writing 2001_solutions.idv[99] (2001_solutions98x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.460 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.460 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.460 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.460 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

[38]
l. 472 Writing 2001_solutions.idv[100] (2001_solutions99x.png)
l. 482 Writing 2001_solutions.idv[101] (2001_solutions100x.png)
[39]
l. 485 Writing 2001_solutions.idv[102] (2001_solutions101x.png)
l. 491 Writing 2001_solutions.idv[103] (2001_solutions102x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 491 Writing 2001_solutions.idv[104] (2001_solutions103x.png)
l. 491 Writing 2001_solutions.idv[105] (2001_solutions104x.png)
l. 491 Writing 2001_solutions.idv[106] (2001_solutions105x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.491 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.491 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.491 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.491 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.491 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument> ...}{\sqrt {3}} \hat {O} \psi _{2},\\ &
                                                  \text {replacing the opera...
l.491 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.491 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.491 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.491 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.491 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.491 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.491 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.491 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.491 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.491 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<argument> ... operator with the eigenvalues,}\\ &
                                                  = \frac {1}{\sqrt {6}} (-1...
l.491 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 491 Writing 2001_solutions.idv[107] (2001_solutions106x.png)
! Missing $ inserted.
<inserted text> 
                $
l.491 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
\d:frac ->\egroup 
                  \EndPicture 
l.491 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
\n:frac : ...p \b:frac \@@over \c:frac #2\d:frac }
                                                  
l.491 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

l. 491 Writing 2001_solutions.idv[108] (2001_solutions107x.png)
l. 491 Writing 2001_solutions.idv[109] (2001_solutions108x.png)
! Misplaced alignment tab character &.
<recently read> &
                 
l.491 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 491 Writing 2001_solutions.idv[110] (2001_solutions109x.png)
l. 491 Writing 2001_solutions.idv[111] (2001_solutions110x.png)
l. 491 Writing 2001_solutions.idv[112] (2001_solutions111x.png)
! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.491 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.491 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.491 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.491 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 491 Writing 2001_solutions.idv[113] (2001_solutions112x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.491 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.491 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.491 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.491 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

[40]
l. 497 Writing 2001_solutions.idv[114] (2001_solutions113x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 497 Writing 2001_solutions.idv[115] (2001_solutions114x.png)
l. 497 Writing 2001_solutions.idv[116] (2001_solutions115x.png)
l. 497 Writing 2001_solutions.idv[117] (2001_solutions116x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.497 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.497 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.497 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.497 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.497 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument> ...es \frac {2}{\sqrt {3}}\right ),\\ &
                                                  = -\frac {1}{6} + \frac {1...
l.497 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 497 Writing 2001_solutions.idv[118] (2001_solutions117x.png)
l. 497 Writing 2001_solutions.idv[119] (2001_solutions118x.png)
l. 497 Writing 2001_solutions.idv[120] (2001_solutions119x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.497 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.497 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.497 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.497 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.497 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.497 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.497 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.497 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.497 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.497 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.497 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 497 Writing 2001_solutions.idv[121] (2001_solutions120x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.497 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.497 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.497 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.497 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

[41]
l. 503 Writing 2001_solutions.idv[122] (2001_solutions121x.png)
l. 511 Writing 2001_solutions.idv[123] (2001_solutions122x.png)
l. 512 Writing 2001_solutions.idv[124] (2001_solutions123x.png)
[42]
l. 517 Writing 2001_solutions.idv[125] (2001_solutions124x.png)
l. 521 Writing 2001_solutions.idv[126] (2001_solutions125x.png)
[43]
l. 525 Writing 2001_solutions.idv[127] (2001_solutions126x.png)
l. 533 Writing 2001_solutions.idv[128] (2001_solutions127x.png)
[44]
l. 537 Writing 2001_solutions.idv[129] (2001_solutions128x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 546 Writing 2001_solutions.idv[130] (2001_solutions129x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.546 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.546 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.546 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.546 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.546 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<recently read> &
                 
l.546 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.546 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.546 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.546 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.546 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.546 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.546 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.546 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.546 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.546 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.546 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
<recently read> &
                 
l.546 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
<argument> ... c^2 &= 3 m^2 c^4,\\ \Rightarrow p &
                                                  = \sqrt {3} m c. 
l.546 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 546 Writing 2001_solutions.idv[131] (2001_solutions130x.png)
! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.546 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.546 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.546 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.546 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.546 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.546 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[45]
l. 546 Writing 2001_solutions.idv[132] (2001_solutions131x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.546 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.546 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.546 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.546 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

l. 554 Writing 2001_solutions.idv[133] (2001_solutions132x.png)
[46]
l. 560 Writing 2001_solutions.idv[134] (2001_solutions133x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.569 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.569 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.569 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.569 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.569 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument> ...\gamma \Delta \bar {t},\\ \Delta t &
                                                  \rightarrow \frac {\Delta ...
l.569 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 569 Writing 2001_solutions.idv[135] (2001_solutions134x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.569 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.569 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.569 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.569 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.569 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.569 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.569 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.569 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.569 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.569 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

l. 569 Writing 2001_solutions.idv[136] (2001_solutions135x.png)
! Misplaced alignment tab character &.
<argument> ...\\ \Rightarrow \frac {\Delta x}{v} &
                                                  = \gamma \Delta \bar {t} =...
l.569 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 569 Writing 2001_solutions.idv[137] (2001_solutions136x.png)
! Misplaced alignment tab character &.
<argument> ...}}\Delta \bar {t},\\ \Rightarrow v &
                                                  = \sqrt {\frac {1}{c^2\Del...
l.569 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 569 Writing 2001_solutions.idv[138] (2001_solutions137x.png)
! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.569 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.569 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.569 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.569 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.569 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.569 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[47]
l. 569 Writing 2001_solutions.idv[139] (2001_solutions138x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.569 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.569 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.569 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.569 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 578 Writing 2001_solutions.idv[140] (2001_solutions139x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.578 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.578 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.578 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.578 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.578 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument> ...^{16} \times 10^{-16}+900}} 30c,\\ &
                                                  = \sqrt {\frac {1}{902.98}...
l.578 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 578 Writing 2001_solutions.idv[141] (2001_solutions140x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.578 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.578 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.578 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.578 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.578 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.578 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.578 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.578 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.578 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<argument> ...= \sqrt {\frac {1}{902.98}} 30c,\\ &
                                                  = .998 c = 2.98\times 10^8...
l.578 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.578 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.578 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.578 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.578 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.578 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.578 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.578 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[48]
l. 578 Writing 2001_solutions.idv[142] (2001_solutions141x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.578 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.578 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.578 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.578 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

l. 584 Writing 2001_solutions.idv[143] (2001_solutions142x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.592 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.592 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.592 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.592 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.592 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<recently read> &
                 
l.592 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.592 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.592 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.592 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.592 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.592 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.592 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.592 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.592 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[49]
! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.592 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.592 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

l. 592 Writing 2001_solutions.idv[144] (2001_solutions143x.png)
! Misplaced alignment tab character &.
<argument> ...row \frac {\Delta x^2}{\Delta t^2} &
                                                  > c. 
l.592 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.592 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.592 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.592 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.592 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.592 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.592 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 592 Writing 2001_solutions.idv[145] (2001_solutions144x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.592 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.592 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.592 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.592 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

[50]
l. 599 Writing 2001_solutions.idv[146] (2001_solutions145x.png)
[51]
l. 623 Writing 2001_solutions.idv[147] (2001_solutions146x.png)
[52]
l. 627 Writing 2001_solutions.idv[148] (2001_solutions147x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.634 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.634 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.634 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.634 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.634 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument>  W_{AB} &= P\Delta V,\\ &
                                    = 200 \times \left (V_b - 2\right ). 
l.634 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 634 Writing 2001_solutions.idv[149] (2001_solutions148x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.634 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.634 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.634 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.634 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.634 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.634 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.634 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.634 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.634 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.634 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.634 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[53]
l. 634 Writing 2001_solutions.idv[150] (2001_solutions149x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.634 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.634 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.634 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.634 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 639 Writing 2001_solutions.idv[151] (2001_solutions150x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.639 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.639 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.639 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.639 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.639 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument> ...\left (\frac {V_f}{V_i}\right ),\\ &
                                                  = 500 \times 2 \times \ln ...
l.639 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 639 Writing 2001_solutions.idv[152] (2001_solutions151x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.639 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.639 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.639 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.639 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.639 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.639 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.639 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.639 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.639 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.639 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.639 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 639 Writing 2001_solutions.idv[153] (2001_solutions152x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.639 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.639 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.639 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.639 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

[54]
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.645 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.645 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.645 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.645 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.645 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<recently read> &
                 
l.645 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.645 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.645 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.645 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.645 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.645 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.645 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.645 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.645 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.645 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.645 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
<recently read> &
                 
l.645 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.645 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.645 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.645 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.645 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.645 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.645 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 645 Writing 2001_solutions.idv[154] (2001_solutions153x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.645 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.645 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.645 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.645 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 650 Writing 2001_solutions.idv[155] (2001_solutions154x.png)
l. 650 Writing 2001_solutions.idv[156] (2001_solutions155x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.650 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.650 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.650 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.650 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.650 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument> ... {\left (\frac {2}{5}\right )}, \\ &
                                                  = 600 + 400 \ln {\left (\f...
l.650 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 650 Writing 2001_solutions.idv[157] (2001_solutions156x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.650 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.650 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.650 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.650 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.650 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.650 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.650 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.650 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[55]
! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.650 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.650 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.650 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 650 Writing 2001_solutions.idv[158] (2001_solutions157x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.650 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.650 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.650 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.650 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

l. 651 Writing 2001_solutions.idv[159] (2001_solutions158x.png)
l. 651 Writing 2001_solutions.idv[160] (2001_solutions159x.png)
l. 651 Writing 2001_solutions.idv[161] (2001_solutions160x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.654 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.654 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.654 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.654 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.654 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.654 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.654 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.654 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.654 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.654 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\end:m ->$$\egroup 
                   
l.654 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.654 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.654 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.654 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.654 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.654 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.654 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[56]
l. 654 Writing 2001_solutions.idv[162] (2001_solutions161x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.654 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.654 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.654 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.654 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

l. 659 Writing 2001_solutions.idv[163] (2001_solutions162x.png)
[57]
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.668 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.668 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.668 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.668 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.668 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument>  X_L &= X_C,\\ \Rightarrow \omega L &
                                                = \frac {1}{\omega C},\\ \Ri...
l.668 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 668 Writing 2001_solutions.idv[164] (2001_solutions163x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.668 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.668 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.668 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.668 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.668 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.668 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.668 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.668 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.668 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.668 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
<argument> ...rac {1}{\omega C},\\ \Rightarrow C &
                                                  = \frac {1}{\omega ^2 L}, 
l.668 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 668 Writing 2001_solutions.idv[165] (2001_solutions164x.png)
! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.668 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.668 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.668 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.668 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.668 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.668 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 668 Writing 2001_solutions.idv[166] (2001_solutions165x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.668 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.668 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.668 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.668 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 674 Writing 2001_solutions.idv[167] (2001_solutions166x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.674 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.674 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.674 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.674 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.674 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument> ...s 25 \times 10^{-3} \text { H}},\\ &
                                                  = \frac {1}{25} \times 10^...
l.674 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 674 Writing 2001_solutions.idv[168] (2001_solutions167x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.674 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.674 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.674 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.674 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.674 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.674 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.674 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.674 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[58]
! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.674 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<argument> ...}{25} \times 10^{-3} \text { F},\\ &
                                                  = 40 \times 10^{-6} \text ...
l.674 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.674 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.674 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.674 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.674 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.674 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.674 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.674 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 674 Writing 2001_solutions.idv[169] (2001_solutions168x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.674 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.674 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.674 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.674 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.681 ...uces an output signal such that $V_\text{
                                                  in} \approx V_\text{out}$....
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.681 ...uces an output signal such that $V_\text{
                                                  in} \approx V_\text{out}$....
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.681 ...uces an output signal such that $V_\text{
                                                  in} \approx V_\text{out}$....
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.681 ...uces an output signal such that $V_\text{
                                                  in} \approx V_\text{out}$....
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.681 ...uces an output signal such that $V_\text{
                                                  in} \approx V_\text{out}$....
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[59]
! Too many }'s.
<recently read> }
                 
l.681 ...uces an output signal such that $V_\text{
                                                  in} \approx V_\text{out}$....
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Too many }'s.
\mo:p ...\endcsname #1{#3}\csname b:#2\endcsname }
                                                  
l.681 ...uces an output signal such that $V_\text{
                                                  in} \approx V_\text{out}$....
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Missing $ inserted.
<inserted text> 
                $
l.681 ...put signal such that $V_\text{in} \approx
                                                   V_\text{out}$.  Otherwise...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.681 ...l such that $V_\text{in} \approx V_\text{
                                                  out}$.  Otherwise, if the ...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.681 ...l such that $V_\text{in} \approx V_\text{
                                                  out}$.  Otherwise, if the ...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.681 ...l such that $V_\text{in} \approx V_\text{
                                                  out}$.  Otherwise, if the ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.681 ...l such that $V_\text{in} \approx V_\text{
                                                  out}$.  Otherwise, if the ...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.681 ...l such that $V_\text{in} \approx V_\text{
                                                  out}$.  Otherwise, if the ...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Too many }'s.
<recently read> }
                 
l.681 ...l such that $V_\text{in} \approx V_\text{
                                                  out}$.  Otherwise, if the ...
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Too many }'s.
\mo:p ...\endcsname #1{#3}\csname b:#2\endcsname }
                                                  
l.681 ...l such that $V_\text{in} \approx V_\text{
                                                  out}$.  Otherwise, if the ...
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Missing $ inserted.
<inserted text> 
                $
l.682 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 687 Writing 2001_solutions.idv[170] (2001_solutions169x.png)
! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.687 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing } inserted.
<inserted text> 
                }
l.687 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.687 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.687 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing $$ inserted.
<to be read again> 
                   \vskip 
l.687 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<recently read> &
                 
l.687 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.687 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.687 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.687 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.687 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.687 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.687 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.687 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.687 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.687 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.687 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.687 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 687 Writing 2001_solutions.idv[171] (2001_solutions170x.png)

! LaTeX Error: \begin{document} ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.687 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.687 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.687 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.687 \end{align}
                 
Things are pretty mixed up, but I think the worst is over.

[60]
l. 698 Writing 2001_solutions.idv[172] (2001_solutions171x.png)
[61]
! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.708 \end{align}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.708 \end{align}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.708 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.708 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.708 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.708 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.708 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.708 \end{align}
                 
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.708 \end{align}
                 
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Extra }, or forgotten $.
\c:halign ->\egroup 
                    \d:halign 
l.708 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\c:halign ->\egroup \d:halign 
                              
l.708 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
l.708 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   \special 
l.708 \end{align}
                 
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
<argument>  Z_\text {tot.} &
                            = \left |Z\right |e^{i\phi },\\ \left |Z\right |...
l.708 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 708 Writing 2001_solutions.idv[173] (2001_solutions172x.png)
! Misplaced alignment tab character &.
\@tempa ->\endgroup &
                     &
l.708 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\@tempa ->\endgroup &&
                      
l.708 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \omit.
\omit ->\:omit 
               \BB:halign \gdef \end:omit {\gdef \end:omit {}\d:halign }
l.708 \end{align}
                 
I expect to see \omit only after tab marks or the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.708 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.708 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.708 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.708 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \vskip 
l.708 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.708 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

l. 708 Writing 2001_solutions.idv[174] (2001_solutions173x.png)
! Missing $ inserted.
<inserted text> 
                $
l.708 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
<argument> ...ght |e^{i\phi },\\ \left |Z\right |&
                                                  =\sqrt {R_\text {eff}^2 + ...
l.708 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 708 Writing 2001_solutions.idv[175] (2001_solutions174x.png)
! Misplaced alignment tab character &.
<argument> ...t {eff}^2 + Z_C^2 + Z_L^2},\\ \phi &
                                                  = \arctan \left ( \frac {Z...
l.708 \end{align}
                 
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

l. 708 Writing 2001_solutions.idv[176] (2001_solutions175x.png)
! Misplaced \noalign.
\math@cr@@ ...ffalse }\fi \math@cr@@@ \o:noalign: 
                                                  {\vskip #1\relax }
l.708 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.708 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.708 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\math@cr@@ ...cr@@@ \o:noalign: {\vskip #1\relax }
                                                  
l.708 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten \endgroup.
\EndMkHalign ->\egroup 
                       \d:PauseMkHalign \end:m \endgroup \iffalse {\fi \expa...
l.708 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
\EndMkHalign ->\egroup \d:PauseMkHalign \end:m 
                                               \endgroup \iffalse {\fi \expa...
l.708 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ... \:omit {\ht:everypar {}\r:halign 
                                                  }\t:halign \Advance: \MkHa...
l.708 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...t:everypar {}\r:halign }\t:halign 
                                                  \Advance: \MkHalign:d -1 \...
l.708 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> )M\halign:id 
                        x\mu:span 
l.708 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> \new:span 
                     ;
l.708 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\EndMkHalign ...end:omit \sv:end:omit \relax:shrp 
                                                  \iffalse }\fi 
l.708 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\n:endalign: ...alignConfig \csname b:\align:type 
                                                  \endcsname \ifingather@ \r...
l.708 \end{align}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

l. 708 Writing 2001_solutions.idv[177] (2001_solutions176x.png)

! LaTeX Error: \begin{enumerate} on input line 702 ended by \end{align}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.708 \end{align}
                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.708 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.708 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.709 where $Z_\text{
                     eff.} = Z_C + Z_L$ and $R_\text{eff.}$ are the effectiv...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.709 where $Z_\text{
                     eff.} = Z_C + Z_L$ and $R_\text{eff.}$ are the effectiv...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.709 where $Z_\text{
                     eff.} = Z_C + Z_L$ and $R_\text{eff.}$ are the effectiv...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.709 where $Z_\text{
                     eff.} = Z_C + Z_L$ and $R_\text{eff.}$ are the effectiv...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.709 where $Z_\text{
                     eff.} = Z_C + Z_L$ and $R_\text{eff.}$ are the effectiv...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Too many }'s.
<recently read> }
                 
l.709 where $Z_\text{
                     eff.} = Z_C + Z_L$ and $R_\text{eff.}$ are the effectiv...
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Too many }'s.
\mo:p ...\endcsname #1{#3}\csname b:#2\endcsname }
                                                  
l.709 where $Z_\text{
                     eff.} = Z_C + Z_L$ and $R_\text{eff.}$ are the effectiv...
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Undefined control sequence.
\enit@endenumerate ->\enit@after 
                                 \endlist \ifx \enit@series \relax \else \if...
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
l.710 \end{enumerate}
                     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
\enit@endenumerate ...\else \ifnum \enit@resuming 
                                                  =\@ne \enit@setresumekeys ...
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
                   =
l.710 \end{enumerate}
                     
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
\enit@setresumekeys ...xpandafter {\enit@savekeys 
                                                  }\xdef \enit@afterlist {#2...
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...it@toks }\ifnum \enit@type 
                                                  =\z@ #3\def \enit@noexcs {...
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
                   =
l.710 \end{enumerate}
                     
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
<argument> enit@resume@series@\enit@series 
                                           
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...me@#1}{\csname c@\@listctr 
                                                  \endcsname \the \csname c@...
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...e \the \csname c@\@listctr 
                                                  \endcsname }\fi }
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! You can't use `\relax' after \the.
<recently read> \c@ 
                    
l.710 \end{enumerate}
                     
I'm forgetting what you said and using zero instead.

! Undefined control sequence.
\enit@endenumerate ...t \fi \ifnum \enit@resuming 
                                                  =\thr@@ \enit@setresumekey...
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
                   =
l.710 \end{enumerate}
                     
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
\enit@setresumekeys ...xpandafter {\enit@savekeys 
                                                  }\xdef \enit@afterlist {#2...
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...it@toks }\ifnum \enit@type 
                                                  =\z@ #3\def \enit@noexcs {...
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
                   =
l.710 \end{enumerate}
                     
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
\enit@setresumekeys ...me@#1}{\csname c@\@listctr 
                                                  \endcsname \the \csname c@...
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...e \the \csname c@\@listctr 
                                                  \endcsname }\fi }
l.710 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! You can't use `\relax' after \the.
<recently read> \c@ 
                    
l.710 \end{enumerate}
                     
I'm forgetting what you said and using zero instead.


! LaTeX Error: \begin{document} ended by \end{enumerate}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.710 \end{enumerate}
                     
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.710 \end{enumerate}
                     
Things are pretty mixed up, but I think the worst is over.

l.710 --- TeX4ht warning --- \SaveEverypar's: 1 at \begin{enumerate} and 2 \end
{enumerate} ---
! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.711 ... You can solve for $I$ with $I = V_\text{
                                                  in.}/Z$, which is to say d...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.711 ... You can solve for $I$ with $I = V_\text{
                                                  in.}/Z$, which is to say d...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.711 ... You can solve for $I$ with $I = V_\text{
                                                  in.}/Z$, which is to say d...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.711 ... You can solve for $I$ with $I = V_\text{
                                                  in.}/Z$, which is to say d...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.711 ... You can solve for $I$ with $I = V_\text{
                                                  in.}/Z$, which is to say d...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[62]
! Too many }'s.
<recently read> }
                 
l.711 ... You can solve for $I$ with $I = V_\text{
                                                  in.}/Z$, which is to say d...
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Too many }'s.
\mo:p ...\endcsname #1{#3}\csname b:#2\endcsname }
                                                  
l.711 ... You can solve for $I$ with $I = V_\text{
                                                  in.}/Z$, which is to say d...
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Missing $ inserted.
<inserted text> 
                $
l.712 \begin{enumerate}[label=\Roman*.]
                                       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.712 \begin{enumerate}[label=\Roman*.]
                                       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


! LaTeX Error: Lonely \item--perhaps a missing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.713 \item I
             n this case, $Z = R + i\omega L$.  Therefore, $I = V_\text{in.}...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Argument of \n:text@: has an extra }.
<inserted text> 
                \par 
l.713 ...R + i\omega L$.  Therefore, $I = V_\text{
                                                  in.}/\left(R+i\omega L\rig...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \n:text@: was complete.
<to be read again> 
                   \par 
l.713 ...R + i\omega L$.  Therefore, $I = V_\text{
                                                  in.}/\left(R+i\omega L\rig...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.713 ...R + i\omega L$.  Therefore, $I = V_\text{
                                                  in.}/\left(R+i\omega L\rig...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.713 ...R + i\omega L$.  Therefore, $I = V_\text{
                                                  in.}/\left(R+i\omega L\rig...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.713 ...R + i\omega L$.  Therefore, $I = V_\text{
                                                  in.}/\left(R+i\omega L\rig...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.713 ...R + i\omega L$.  Therefore, $I = V_\text{
                                                  in.}/\left(R+i\omega L\rig...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Too many }'s.
\par ...m \@noitemerr {\@@par }\fi \else {\@@par }
                                                  \fi 
l.713 ...R + i\omega L$.  Therefore, $I = V_\text{
                                                  in.}/\left(R+i\omega L\rig...
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Too many }'s.
<recently read> }
                 
l.713 ...R + i\omega L$.  Therefore, $I = V_\text{
                                                  in.}/\left(R+i\omega L\rig...
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Too many }'s.
\mo:p ...\endcsname #1{#3}\csname b:#2\endcsname }
                                                  
l.713 ...R + i\omega L$.  Therefore, $I = V_\text{
                                                  in.}/\left(R+i\omega L\rig...
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

l. 713 Writing 2001_solutions.idv[178] (2001_solutions177x.png)
! Missing $ inserted.
<inserted text> 
                $
l.713 ... L$.  Therefore, $I = V_\text{in.}/\left(
                                                  R+i\omega L\right),$ and s...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


! LaTeX Error: Lonely \item--perhaps a missing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.719 \item H
             ere, $Z = R + i\omega L$ as before, but now the current must pa...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

[63]

! LaTeX Error: Lonely \item--perhaps a missing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.734 \item H
             ere, $Z = R + 1/i\omega C$.  The circuit is analogous to the fi...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Lonely \item--perhaps a missing list environment.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.740 \item A
             s before, $Z = R + 1/i\omega C$, but the final circuit element ...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
\enit@endenumerate ->\enit@after 
                                 \endlist \ifx \enit@series \relax \else \if...
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@endenumerate ...\else \ifnum \enit@resuming 
                                                  =\@ne \enit@setresumekeys ...
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
                   =
l.745 \end{enumerate}
                     
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
\enit@setresumekeys ...xpandafter {\enit@savekeys 
                                                  }\xdef \enit@afterlist {#2...
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...it@toks }\ifnum \enit@type 
                                                  =\z@ #3\def \enit@noexcs {...
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
                   =
l.745 \end{enumerate}
                     
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
<argument> enit@resume@series@\enit@series 
                                           
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...me@#1}{\csname c@\@listctr 
                                                  \endcsname \the \csname c@...
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...e \the \csname c@\@listctr 
                                                  \endcsname }\fi }
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! You can't use `\relax' after \the.
<recently read> \c@ 
                    
l.745 \end{enumerate}
                     
I'm forgetting what you said and using zero instead.

! Undefined control sequence.
\enit@endenumerate ...t \fi \ifnum \enit@resuming 
                                                  =\thr@@ \enit@setresumekey...
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
                   =
l.745 \end{enumerate}
                     
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
\enit@setresumekeys ...xpandafter {\enit@savekeys 
                                                  }\xdef \enit@afterlist {#2...
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...it@toks }\ifnum \enit@type 
                                                  =\z@ #3\def \enit@noexcs {...
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
                   =
l.745 \end{enumerate}
                     
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
\enit@setresumekeys ...me@#1}{\csname c@\@listctr 
                                                  \endcsname \the \csname c@...
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\enit@setresumekeys ...e \the \csname c@\@listctr 
                                                  \endcsname }\fi }
l.745 \end{enumerate}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! You can't use `\relax' after \the.
<recently read> \c@ 
                    
l.745 \end{enumerate}
                     
I'm forgetting what you said and using zero instead.


! LaTeX Error: \begin{document} ended by \end{enumerate}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.745 \end{enumerate}
                     
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.745 \end{enumerate}
                     
Things are pretty mixed up, but I think the worst is over.

l.745 --- TeX4ht warning --- \SaveEverypar's: 2 at \begin{enumerate} and 3 \end
{enumerate} ---
[64] [65] [66] [67]
l.813 --- TeX4ht warning --- \Link{section.29}? ---
[68] [69] [70]
l.880 --- TeX4ht warning --- \Link{section.6}? ---
[71] [72] [73] [74] [75] [76] [77] [78] [79] [80] [81] [82] [83] [84] [85] [86]
[87] [88] [89] [90] [91] [92] [93] [94]
l.1287 --- TeX4ht warning --- \Link{section.69}? ---
l.1300 --- TeX4ht warning --- \Link{section.69}? ---
[95] [96] [97] [98] [99] [100] [101] [102]
l.1500 --- TeX4ht warning --- \Link{section.32}? ---
[103] [104] [105]
l.1551 --- TeX4ht warning --- \Link{section.83}? ---
l.1553 --- TeX4ht warning --- \Link{section.81}? ---
l.1555 --- TeX4ht warning --- \Link{section.43}? ---
[106] [107] [108] [109] [110] [111] [112] [113] [114] [115] [116] [117] [118] [
119] [120] [121]
l.1929 --- TeX4ht warning --- \Link{section.90}? ---
[122] [123] [124] [125] [126] [127] [128] [129] [130] [131] [132]
Package atveryend Info: Empty hook `BeforeClearDocument' on input line 2132.
[133]
Package atveryend Info: Empty hook `AfterLastShipout' on input line 2132.
(./2001_solutions.aux)
Package atveryend Info: Empty hook `AtVeryEndDocument' on input line 2132.
Package atveryend Info: Empty hook `AtEndAfterFileList' on input line 2132.
Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 2132.
 ) 
Here is how much of TeX's memory you used:
 16796 strings out of 493118
 265868 string characters out of 6135460
 467270 words of memory out of 5000000
 19966 multiletter control sequences out of 15000+600000
 21763 words of font info for 82 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 48i,14n,46p,10875b,549s stack positions out of 5000i,500n,10000p,200000b,80000s

Output written on 2001_solutions.dvi (133 pages, 334796 bytes).
